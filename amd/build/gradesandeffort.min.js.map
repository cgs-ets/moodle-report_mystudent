{"version":3,"file":"gradesandeffort.min.js","sources":["../src/gradesandeffort.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * @package   report_mystudent\n * @copyright 2022 Veronica Bermegui\n * @license   http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\ndefine(['jquery', 'core/ajax', 'core/log', 'report_mystudent/chart'], function ($, Ajax, Log, Chart) {\n    'use strict';\n\n    function init() {\n\n        var control = new AcademicInfo();\n        control.main();\n    }\n\n    /**\n     * AcademicInfo a single report_mystudent block instance contents.\n     *\n     * @constructor\n     */\n    function AcademicInfo() {\n     \n    }\n\n\n    /**\n     * Run the controller.\n     *\n     */\n    AcademicInfo.prototype.main = function () {\n        let self = this;\n      \n        const campus = document.querySelector('[data-username]').getAttribute('data-campus'); \n        if (campus == \"Senior\") {\n            self.trendChartSenior();\n            self.getGradeHistory();\n            self.getEffortHistory();\n        } else {\n            self.trendChartPrimary();\n        }\n\n    };\n\n\n\n\n    AcademicInfo.prototype.trendChartSenior = function () {\n\n        const ctx = document.getElementById(\"trendChart\");\n        if (!ctx) {\n            return;\n        }\n        const performanceEl = document.querySelector(\"#performance\");\n        const performance = JSON.parse(performanceEl.dataset.performance);\n\n        let labels = [];\n        let sets = [];\n        let attendance = [];\n        let effort = [];\n        let grades = [];\n        let gradeperterm = [];\n\n        const TAGS = {\n            avgattendance: 'Average Attendance',\n            avgeffort: 'Average Effort',\n            avggrades: 'Average Grade',\n        }\n\n        for (let i = 0; i < performance.length; i++) {\n            var p = performance[i];\n\n            const year = p.details.year.toString();\n            const term = p.details.term.toString();\n\n            labels.push(['T' + term, year]);\n            gradeperterm.push(p.details.avggrades);\n\n            grades.push(p.details.avggrades);\n            effort.push(p.details.avgeffort)\n            attendance.push(p.details.avgattendance)\n\n        }\n\n        sets.push({\n            label: TAGS.avggrades,\n            data: grades,\n            fill: false,\n            borderColor: '#31326f',\n            backgroundColor: '#31326f',\n            tension: 0.1,\n        });\n\n        sets.push({\n            label: TAGS.avgeffort,\n            data: effort,\n            fill: false,\n            borderColor: '#ffc93c',\n            backgroundColor: '#ffc93c',\n            tension: 0.1\n        });\n\n        sets.push({\n            label: TAGS.avgattendance,\n            data: attendance,\n            fill: false,\n            borderColor: '#1687a7',\n            backgroundColor: '#1687a7',\n            tension: 0.1\n        });\n\n        const data = {\n            labels: labels,\n            datasets: sets\n        };\n\n        const options = {\n            responsive: true,\n            maintainAspectRatio: false,\n\n        }\n\n        const plugin = {\n            id: 'custom_canvas_background_color',\n            beforeDraw: (chart) => {\n                const ctx = chart.canvas.getContext('2d');\n                ctx.save();\n                ctx.globalCompositeOperation = 'destination-over';\n                ctx.fillStyle = '#f6f5f5';\n                ctx.fillRect(0, 0, chart.width, chart.height);\n                ctx.restore();\n            }\n        };\n\n        new Chart(ctx, {\n            type: 'line',\n            data: data,\n            options: options,\n            plugins: [plugin],\n\n        });\n\n    };\n\n    AcademicInfo.prototype.trendChartPrimary = function () {\n        const ctx = document.getElementById(\"trendChart\");\n        if (!ctx) {\n            return;\n        }\n\n        const performanceEl = document.querySelector(\"#performance\");\n        const performance = JSON.parse(performanceEl.dataset.performance);\n\n        let labels = [];\n        let sets = [];\n        let attendance = [];\n        let effort = [];\n        let grades = [];\n\n        const TAGS = {\n            avgattendance: 'Average Attendance',\n            avgeffort: 'Average Effort',\n            avggrades: 'Average Grade',\n        }\n\n        const TAGS_EFFORTS_DESC = {\n            e: 'Excellent (E)',\n            vg: 'Very Good (VG)',\n            avg: 'Average (AVG)',\n            ni: 'Needs Improvement (NI)',\n        }\n\n        const TAGS_GRADES_DESC = {\n            be: 'Below Expectations',\n            gs: 'Good start (GS)',\n            ms: 'Making strides (MS)',\n            grwi: 'Go run with it (GRWI)',\n            ae: 'Above expectations'\n        }\n\n        // Segment helpers\n        const segments = (dataset) => {\n            let hasval = [];\n            let noval = [];\n            let segment = [];\n\n            for (let i = 0; i < dataset.length; i++) {\n\n                if (dataset[i] == undefined) {\n                    noval.push(i);\n                } else {\n                    hasval.push(i);\n                }\n\n            }\n\n            for (const index of noval) {\n                if (index > 0 && index < (dataset.length - 1)) {\n                    const seg = [getStartPoint(dataset, index), getEndPoint(dataset, index)];\n                    segment.push(seg); //start-finish segment\n                }\n            }\n\n            segment = segment.filter(function (element) {\n                return element !== undefined;\n            });\n\n\n        };\n\n        const getEndPoint = (dataset, currindex) => {\n            let flag = true;\n            let i = ++currindex;\n            while (flag && i < dataset.length) {\n\n                if (dataset[i] != undefined) {\n                    flag = false;\n                } else {\n                    i++;\n                }\n\n            }\n\n            return dataset[i];\n\n        };\n\n        const getStartPoint = (dataset, currindex) => {\n            let flag = true;\n            let i = --currindex;\n\n            while (flag && i > 0) {\n                if (dataset[i] != undefined) {\n                    flag = false;\n                } else {\n                    i--;\n                }\n\n            }\n\n            return dataset[i];\n\n\n        }\n\n        for (let i = 0; i < performance.length; i++) {\n            var p = performance[i];\n\n            const year = p.details.year.toString();\n            const term = p.details.term.toString();\n\n            labels.push(['T' + term, year]);\n\n            if (p.details.avggrades == null) {\n                p.details.avggrades = undefined;\n            }\n            grades.push(p.details.avggrades);\n\n            if (p.details.effortaverage == null) {\n                p.details.effortaverage = undefined;\n            }\n            effort.push(p.details.effortaverage);\n\n            if (p.details.percentageattended == null) {\n                p.details.percentageattended = undefined;\n            }\n            attendance.push(p.details.percentageattended);\n\n        }\n\n        const skipped = (ctx, value) => ctx.p0.skip || ctx.p1.skip ? value : undefined;\n        // End Segment helpers\n\n        const sgrades = segments(grades);\n        const seffort = segments(effort);\n        const sattendance = segments(attendance);\n\n        sets.push({\n            label: TAGS.avggrades,\n            data: grades,\n            fill: false,\n            borderColor: '#31326f',\n            segment: {\n                borderDash: ctx => skipped(ctx, sgrades),\n            },\n            backgroundColor: '#31326f',\n            tension: 0.1,\n        });\n\n        sets.push({\n            label: TAGS.avgeffort,\n            data: effort,\n            fill: false,\n            borderColor: '#ffc93c',\n            segment: {\n                borderDash: ctx => skipped(ctx, seffort),\n            },\n            backgroundColor: '#ffc93c',\n            tension: 0.1\n        });\n\n        sets.push({\n            label: TAGS.avgattendance,\n            data: attendance,\n            fill: false,\n            borderColor: '#1687a7',\n            segment: {\n                borderDash: ctx => skipped(ctx, sattendance),\n            },\n            backgroundColor: '#1687a7',\n            tension: 0.1\n        });\n\n        const data = {\n            labels: labels,\n            datasets: sets\n        };\n\n        const options = {\n            responsive: true,\n            maintainAspectRatio: false,\n            plugins: {\n                tooltip: {\n                    callbacks: {\n                        label: function (context) {\n\n                            if (context.dataset.label == TAGS.avggrades) {\n\n                                if (context.parsed.y > 0.00 && context.parsed.y <= 20.00) {\n                                    return TAGS_GRADES_DESC.be;\n                                } else if (context.parsed.y > 20.00 && context.parsed.y <= 40.00) {\n                                    return TAGS_GRADES_DESC.gs\n                                } else if (context.parsed.y > 40.00 && context.parsed.y <= 60.00) {\n                                    return TAGS_GRADES_DESC.ms;\n                                } else if (context.parsed.y > 60.00 && context.parsed.y <= 80.00) {\n                                    return TAGS_GRADES_DESC.grwi;\n                                } else if (context.parsed.y > 80.00) {\n                                    return TAGS_GRADES_DESC.ae\n                                }\n                            }\n                            if (context.dataset.label == TAGS.avgeffort) {\n                                if (parseFloat(context.parsed.y) > 0.00 && parseFloat(context.parsed.y) <= 25.00) {\n                                    return TAGS_EFFORTS_DESC.ni;\n                                } else if (parseFloat(context.parsed.y) > 25.00 && parseFloat(context.parsed.y) <= 50.00) {\n                                    return TAGS_EFFORTS_DESC.avg\n                                } else if (parseFloat(context.parsed.y) > 50.00 && parseFloat(context.parsed.y) < 95.00) {\n                                    return TAGS_EFFORTS_DESC.vg;\n                                } else if (parseFloat(context.parsed.y) >= 95.00) {\n                                    return TAGS_EFFORTS_DESC.e;\n                                }\n                            } else {\n\n                                return context.parsed.y + \"%\";\n                            }\n                        }\n                    }\n                }\n            },\n            scales: {\n                y: {\n                    suggestedMin: 25,\n                    display: false,\n\n                }\n            }\n\n\n        }\n\n        const plugin = {\n            id: 'custom_canvas_background_color',\n            beforeDraw: (chart) => {\n                const ctx = chart.canvas.getContext('2d');\n                ctx.save();\n                ctx.globalCompositeOperation = 'destination-over';\n                ctx.fillStyle = '#f6f5f5';\n                ctx.fillRect(0, 0, chart.width, chart.height);\n                ctx.restore();\n            }\n        };\n\n        new Chart(ctx, {\n            type: 'line',\n            data: data,\n            options: options,\n            plugins: [plugin],\n\n        });\n    }\n    AcademicInfo.prototype.getEffortHistory = function () {\n\n        const element = document.querySelector('.grade-effort-trend');\n        const username = element.getAttribute('data-username');\n        const campus = element.getAttribute('data-campus');\n        // Add spinner.\n        $('#effort-history-tb').removeAttr('hidden');\n\n        Ajax.call([{\n            methodname: 'report_mystudent_get_effort_history',\n            args: {\n                username: username,\n                campus: campus\n            },\n\n            done: function (response) {\n                Log.debug(response);\n                const htmlResult = response.html;\n                $('#effort-history-tb').attr('hidden', true);\n                $('[data-region=\"effort-history-table\"]').replaceWith(htmlResult);\n\n            },\n\n            fail: function (reason) {\n                Log.error('report_mystudent: Unable to get context.');\n                Log.debug(reason);\n                $('[data-region=\"effort-history-table\"]').replaceWith('<p class=\"alert alert-danger\">Data not available. Please try later</p>');\n            }\n        }]);\n\n    }\n    AcademicInfo.prototype.getGradeHistory = function () {\n\n        const element = document.querySelector('.grade-effort-trend');\n        const username = element.getAttribute('data-username');\n        const campus = element.getAttribute('data-campus');\n        // Add spinner.\n        $('#grade-history-tb').removeAttr('hidden');\n\n        Ajax.call([{\n            methodname: 'report_mystudent_get_grade_history',\n            args: {\n                username: username,\n                campus: campus\n            },\n\n            done: function (response) {\n                Log.debug(response);\n                const htmlResult = response.html;\n                $('#grade-history-tb').attr('hidden', true);\n                $('[data-region=\"grade-history-table\"]').replaceWith(htmlResult);\n\n            },\n\n            fail: function (reason) {\n                Log.error('report_mystudent: Unable to get context.');\n                Log.debug(reason);\n                $('[data-region=\"grade-history-table\"]').replaceWith('<p class=\"alert alert-danger\">Data not available. Please try later</p>');\n            }\n        }]);\n\n\n    }\n\n    return {\n        init: init\n    }\n});"],"names":["define","$","Ajax","Log","Chart","AcademicInfo","prototype","main","document","querySelector","getAttribute","this","trendChartSenior","getGradeHistory","getEffortHistory","trendChartPrimary","ctx","getElementById","performanceEl","performance","JSON","parse","dataset","labels","sets","attendance","effort","grades","gradeperterm","TAGS","i","length","p","year","details","toString","term","push","avggrades","avgeffort","avgattendance","label","data","fill","borderColor","backgroundColor","tension","type","datasets","options","responsive","maintainAspectRatio","plugins","id","beforeDraw","chart","canvas","getContext","save","globalCompositeOperation","fillStyle","fillRect","width","height","restore","TAGS_EFFORTS_DESC","TAGS_GRADES_DESC","segments","hasval","noval","segment","undefined","index","seg","getStartPoint","getEndPoint","filter","element","currindex","flag","effortaverage","percentageattended","skipped","value","p0","skip","p1","sgrades","seffort","sattendance","borderDash","tooltip","callbacks","context","parsed","y","parseFloat","scales","suggestedMin","display","username","campus","removeAttr","call","methodname","args","done","response","debug","htmlResult","html","attr","replaceWith","fail","reason","error","init"],"mappings":"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"}